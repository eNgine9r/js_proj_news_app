{"mappings":"AA8FAA,UAAUC,YAAYC,oBA1FtB,SAAiBC,GACf,MAAMC,EAAMD,EAAIE,OAChB,IAAIC,EAAMF,EAAIG,SACVC,EAAMJ,EAAIK,UAIdC,MAFY,uDAAuDJ,SAAWE,yDAG3EG,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMC,EAAUC,SAASC,cAAc,wBACjCC,KAAEA,EAAMH,UAAWI,KAACA,EAAIC,KAAEA,IAAUD,MAAME,KAAEA,IAAWP,EACvDQ,EAAcC,KAAKC,MAAMH,GAGzBI,GADO,IAAIC,MACOC,gBACjBC,EAAWC,EAAOC,EAAYC,GAAQN,EAAWO,MAAM,KAE9DjB,EAAQkB,UAAY,wHAGoBX,sGAEAH,inBAK9BD,4JAK0CE,kBAAqBD,iEAEtCS,UAAkBE,KAAcD,KAASE,oDAGrE,IAERG,OAAMC,GAASC,QAAQC,IAAIF,I,IAGhC,SAAeG,GACDnC,IAAIE,OAKhBK,MAFY,8GAGTC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,MAAMC,EAAUC,SAASC,cAAc,wBACjCC,KAAEA,EAAMH,UAAWI,KAACA,EAAIC,KAAEA,IAAUD,MAAME,KAAEA,IAAWP,EACvDQ,EAAcC,KAAKC,MAAMH,GAGzBI,GADO,IAAIC,MACOC,gBACjBC,EAAWC,EAAOC,EAAYC,GAAQN,EAAWO,MAAM,KAE9DjB,EAAQkB,UAAY,wHAGoBX,sGAEAH,0NAK9BD,4JAK0CE,kBAAqBD,iEAEtCS,UAAkBE,KAAcD,KAASE,oDAGrE,IAERG,OAAMK,GAASH,QAAQC,IAAIE,I,GAGhB,CACdC,oBAAoB,EACpBC,WAAY","sources":["src/js/weather-widget-api.js"],"sourcesContent":["export default class WeatherApiService {};\n\nconst apiKey = 'e3cf51b9d19c1b71b5828e7d427ff71f';\n\nfunction success(pos) {\n  const crd = pos.coords;\n  let lat = crd.latitude;\n  let lon = crd.longitude;\n\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n\n  fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      const weather = document.querySelector('.weather-counteiner');\n      const { name, weather: [ {main, icon } ], main: { temp } } = data;\n      const roundedTemp = Math.round(temp);\n\n      const date = new Date();\n      const dateString = date.toDateString();\n      const [dayOfWeek, month, dayOfMonth, year] = dateString.split(' ');\n\n      weather.innerHTML = `\n            <li class=\"list\">\n            <div class=\"weather-info\">\n            <h2 class=\"weather-temperature\">${roundedTemp}&#176</h2>\n            <div class=\"weather-conloc\">\n              <h3 class=\"weather-condition\">${main}</h3>\n            <p class=\"weather-location\">\n              <svg class=\"weather-location__icon\">\n                  <path fill=\"#fff\" style=\"fill: var(--color1, #fff)\" d=\"M16 2c-6.072 0.008-10.992 4.929-10.999 11v0.001c0 0.005 0 0.011 0 0.016 0 2.485 0.833 4.776 2.234 6.609l-0.019-0.026s0.3 0.395 0.348 0.452l8.436 9.948 8.439-9.954c0.044-0.053 0.345-0.446 0.345-0.446v-0.004c1.382-1.806 2.215-4.097 2.215-6.582 0-0.005 0-0.010 0-0.015v0.001c-0.007-6.072-4.927-10.993-10.998-11.001h-0.001zM16 17.001c-2.209 0-4-1.791-4-4s1.791-4 4-4v0c2.209 0 4 1.791 4 4s-1.791 4-4 4v0z\"></path>\n              </svg>\n              ${name}\n            </p>\n            </div>\n          </div>\n          <div class=\"weather-icon\">\n            <img src=\"https://openweathermap.org/img/wn/${icon}@4x.png\" alt=\"${main}\">\n          </div>\n          <p class=\"weather-data-time\">${dayOfWeek} <br> ${dayOfMonth} ${month} ${year}</p>\n        </div>\n        </li>\n            `;\n    })\n    .catch(error => console.log(error));\n}\n\nfunction error(err) {\n  const crd = pos.coords;\n  const city = 'Kyiv';\n\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n\n  fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      const weather = document.querySelector('.weather-counteiner');\n      const { name, weather: [ {main, icon } ], main: { temp } } = data;\n      const roundedTemp = Math.round(temp);\n\n      const date = new Date();\n      const dateString = date.toDateString();\n      const [dayOfWeek, month, dayOfMonth, year] = dateString.split(' ');\n\n      weather.innerHTML = `\n            <li class=\"list\">\n            <div class=\"weather-info\">\n            <h2 class=\"weather-temperature\">${roundedTemp}&#176</h2>\n            <div class=\"weather-conloc\">\n              <h3 class=\"weather-condition\">${main}</h3>\n            <p class=\"weather-location\">\n              <svg class=\"icon\" width=\"18\" height=\"18\">\n                  <use href=\"./images/sprite.svg#icon-location\"></use>\n              </svg>\n              ${name}\n            </p>\n            </div>\n          </div>\n          <div class=\"weather-icon\">\n            <img src=\"https://openweathermap.org/img/wn/${icon}@4x.png\" alt=\"${main}\">\n          </div>\n          <p class=\"weather-data-time\">${dayOfWeek} <br> ${dayOfMonth} ${month} ${year}</p>\n        </div>\n        </li>\n            `;\n    })\n    .catch(error => console.log(error));\n}\n\nconst options = {\n  enableHighAccuracy: true,\n  maximumAge: 0,\n};\n\nnavigator.geolocation.getCurrentPosition(success, error, options);"],"names":["navigator","geolocation","getCurrentPosition","pos","crd","coords","lat","latitude","lon","longitude","fetch","then","response","json","data","weather","document","querySelector","name","main","icon","temp","roundedTemp","Math","round","dateString","Date","toDateString","dayOfWeek","month","dayOfMonth","year","split","innerHTML","catch","error1","console","log","err","error2","enableHighAccuracy","maximumAge"],"version":3,"file":"index.5580363c.js.map"}